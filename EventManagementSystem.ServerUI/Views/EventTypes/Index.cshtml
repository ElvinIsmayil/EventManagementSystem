@model IEnumerable<EventTypeListVM>

<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <div class="post d-flex flex-column-fluid" id="kt_post">
        <div id="kt_content_container" class="container-xxl">
            <div class="card">
                <div class="card-header border-0 pt-6">
                    <div class="card-title">
                        <div class="d-flex align-items-center position-relative my-1">
                            <span class="svg-icon svg-icon-1 position-absolute ms-6">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black" />
                                    <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 14.4667 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="black" />
                                </svg>
                            </span>
                            <form asp-controller="EventTypes" asp-action="Index" method="get">
                                <div class="d-flex align-items-center position-relative my-1">
                                    <i class="ki-outline ki-magnifier fs-3 position-absolute ms-5"></i>
                                    <input type="text"
                                           name="searchTerm"
                                           value="@ViewData["SearchTerm"]"
                                           data-kt-subscription-table-filter="search"
                                           class="form-control form-control-solid w-250px ps-13"
                                           placeholder="Search Event Types" />
                                    <button type="submit" class="btn btn-primary ms-2">Search</button>
                                    <a asp-action="Index" class="btn btn-light-primary ms-2">Clear</a>
                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="card-toolbar">
                        <div class="d-flex justify-content-end me-2" data-kt-subscription-table-toolbar="base">
                            <a asp-controller="EventTypes" asp-action="Create" class="btn btn-primary">
                                <span class="svg-icon svg-icon-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                        <rect opacity="0.5" x="11.364" y="20.364" width="16" height="2" rx="1" transform="rotate(-90 11.364 20.364)" fill="black" />
                                        <rect x="4.36396" y="11.364" width="16" height="2" rx="1" fill="black" />
                                    </svg>
                                </span>
                                Add Event Type 
                            </a>
                        </div>
                        <div class="d-flex justify-content-end align-items-center d-none" data-kt-subscription-table-toolbar="selected" id="selected-toolbar">
                            <div class="fw-bolder me-5">
                                <span class="me-2" data-kt-subscription-table-select="selected_count" id="selected-count">0</span>Selected
                            </div>
                            <button type="button" class="btn btn-danger" id="delete-selected-btn" data-url="@Url.Action("DeleteSelected", "EventTypes")">Delete Selected</button> @* Changed controller to EventType *@
                        </div>
                    </div>
                </div>
                <div class="card-body pt-0">
                    <table class="table align-middle table-row-dashed fs-6 gy-5" id="kt_subscriptions_table">
                        <thead>
                            <tr class="text-start text-muted fw-bolder fs-7 text-uppercase gs-0">
                                <th class="w-10px pe-2">
                                    <div class="form-check form-check-sm form-check-custom form-check-solid me-3">
                                        <input class="form-check-input" type="checkbox" value="1" id="select-all-checkbox" />
                                    </div>
                                </th>
                                <th class="min-w-125px">Name</th>
                                <th class="min-w-250px">Description</th>
                                <th class="text-end min-w-70px">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="text-gray-600 fw-bold">
                            @if (Model != null && Model.Any())
                            {
                                @foreach (var eventType in Model) 
                                {
                                    <tr>
                                        <td>
                                            <div class="form-check form-check-sm form-check-custom form-check-solid">
                                                <input class="form-check-input row-checkbox" type="checkbox" value="@eventType.Id" />
                                            </div>
                                        </td>
                                        <td>@eventType.Name</td>
                                        <td>@eventType.Description</td> 
                                        <td class="text-end">
                                            <a href="#" class="btn btn-light btn-active-light-primary btn-sm" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                                Actions
                                                <span class="svg-icon svg-icon-5 m-0">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                                        <path d="M11.4343 12.7344L7.25 8.55005C6.83579 8.13583 6.16421 8.13584 5.75 8.55005C5.33579 8.96426 5.33579 9.63583 5.75 10.05L11.2929 15.5929C11.6834 15.9835 12.3166 15.9835 12.7071 15.5929L18.25 10.05C18.6642 9.63584 18.6642 8.96426 18.25 8.55005C17.8358 8.13584 17.1642 8.13584 16.75 8.55005L12.5657 12.7344C12.2533 13.0468 11.7467 13.0468 11.4343 12.7344Z" fill="black" />
                                                    </svg>
                                                </span>
                                            </a>
                                            <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-125px py-4" data-kt-menu="true">
                                                <div class="menu-item px-3">
                                                    <a asp-action="Details" asp-route-id="@eventType.Id" class="menu-link px-3">View</a>
                                                </div>
                                                <div class="menu-item px-3">
                                                    <a asp-action="Update" asp-route-id="@eventType.Id" class="menu-link px-3">Edit</a>
                                                </div>
                                                <div class="menu-item px-3">
                                                    @Html.AntiForgeryToken()
                                                    <a href="javascript:;"
                                                       class="menu-link px-3 delete-btn"
                                                       data-id="@eventType.Id"
                                                       data-name="@($"{eventType.Name}")"
                                                       data-url="@Url.Action("Delete", "EventTypes")">
                                                        
                                                        Delete
                                                    </a>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4" class="text-center py-5">No event types found.</td> 
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function(){

            const selectAllCheckbox = document.getElementById('select-all-checkbox');
            const rowCheckboxes = document.querySelectorAll('.row-checkbox');
            const selectedToolbar = document.getElementById('selected-toolbar');
            const selectedCountSpan = document.getElementById('selected-count');
            const deleteSelectedBtn = document.getElementById('delete-selected-btn');

            function updateSelectedCount() {
                const checkedCount = document.querySelectorAll('.row-checkbox:checked').length;
                selectedCountSpan.textContent = checkedCount;

                if (checkedCount > 0) {
                    selectedToolbar.classList.remove('d-none');
                } else {
                    selectedToolbar.classList.add('d-none');
                }

                if (rowCheckboxes.length > 0 && checkedCount === rowCheckboxes.length) {
                    selectAllCheckbox.checked = true;
                } else {
                    selectAllCheckbox.checked = false;
                }
            }

            rowCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', updateSelectedCount);
            });

            if (selectAllCheckbox) {
                selectAllCheckbox.addEventListener('change', function () {
                    rowCheckboxes.forEach(checkbox => {
                        checkbox.checked = this.checked;
                    });
                    updateSelectedCount();
                });
            }

            if (deleteSelectedBtn) {
                deleteSelectedBtn.addEventListener('click', function () {
                    const selectedIds = [];
                    document.querySelectorAll('.row-checkbox:checked').forEach(checkbox => {
                        selectedIds.push(parseInt(checkbox.value));
                    });

                    if (selectedIds.length === 0) {
                        toastr.warning("No event types selected for deletion."); 
                        return;
                    }

                    Swal.fire({
                        title: 'Are you sure?',
                        text: `You are about to delete ${selectedIds.length} selected event type(s). This action cannot be undone!`, // Changed message
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Yes, delete selected!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            const deleteSelectedUrl = this.dataset.url;
                            const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

                            fetch(deleteSelectedUrl, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'RequestVerificationToken': antiForgeryToken
                                },
                                body: JSON.stringify(selectedIds)
                            })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        toastr.success(data.message);
                                        location.reload();
                                    } else {
                                        toastr.error(data.message);
                                    }
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                    toastr.error('An error occurred during batch deletion.');
                                });
                        }
                    });
                });
            }

            updateSelectedCount();

        });
    </script>
}