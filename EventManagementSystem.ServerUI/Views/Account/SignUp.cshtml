@using EventManagementSystem.Helpers
@model SignUpVM

@{
    Layout = null; // This page does not use a shared layout
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Create Account - Metronic</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="@Url.Content("~/media/logos/favicon.ico")" />
    <link href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <link href="~/plugins/global/plugins.bundle.css" rel="stylesheet" />
    <link href="~/css/style.bundle.css" rel="stylesheet" />

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .form-control:focus {
            border-color: #009ef7 !important;
            box-shadow: 0 0 0 0.25rem rgba(0, 158, 247, 0.25) !important;
        }

        #password-strength-indicator {
            width: 100%;
            height: 8px;
            background-color: #eee; /* Background for the empty part of the bar */
            border-radius: 4px;
            margin-top: 5px;
            overflow: hidden; /* Ensures the inner bar stays within bounds */
        }

        /* This targets the direct child div within #password-strength-indicator */
        #password-strength-indicator > div {
            height: 100%;
            width: 0%; /* Default width */
            background-color: transparent; /* Default background */
            border-radius: 4px;
            transition: width 0.3s ease-in-out, background-color 0.3s ease-in-out;
        }

        /* Corrected CSS for the strength bar's fill and color */
        /* These classes are applied directly to the INNER div, so no 'div' after the class name */
        .strength-weak { background-color: #f1416c !important; width: 33% !important; }
        .strength-medium { background-color: #ffc700 !important; width: 66% !important; }
        .strength-strong { background-color: #50cd89 !important; width: 100% !important; }

        .input-group-password .form-control {
            padding-right: 45px;
        }
        .input-group-password .btn-icon {
            z-index: 2;
        }
    </style>
</head>
<body id="kt_body" class="bg-body">
    <div class="d-flex flex-column flex-root">
        <div class="d-flex flex-column flex-lg-row flex-column-fluid">
            <div class="d-flex flex-column flex-lg-row-auto w-xl-600px positon-xl-relative" style="background-color: #F2C98A">
                <div class="d-flex flex-column position-xl-fixed top-0 bottom-0 w-xl-600px scroll-y">
                    <div class="d-flex flex-row-fluid flex-column text-center p-10 pt-lg-20">
                        <a href="/" class="py-9 mb-5">
                            <img alt="Logo" src="~/media/logos/logo-2.svg" class="h-60px" />
                        </a>
                        <h1 class="fw-bolder fs-2qx pb-5 pb-md-10" style="color: #986923;">Welcome to Metronic</h1>
                        <p class="fw-bold fs-2" style="color: #986923;">Discover Amazing Metronic<br />with great build tools</p>
                    </div>
                    <div class="d-flex flex-row-auto bgi-no-repeat bgi-position-x-center bgi-size-contain bgi-position-y-bottom min-h-100px min-h-lg-350px" style="background-image: url('@Url.Content("~/media/illustrations/sketchy-1/13.png")')"></div>
                </div>
            </div>
            <div class="d-flex flex-column flex-lg-row-fluid py-10">
                <div class="d-flex flex-center flex-column flex-column-fluid">
                    <div class="w-lg-600px p-10 p-lg-15 mx-auto">
                        <form asp-controller="Account" asp-action="SignUp" method="post" class="form w-100" id="kt_sign_up_form">
                            @Html.AntiForgeryToken()

                            @if (!ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger mb-5">
                                    <h4 class="alert-heading fs-5">Please correct the following errors:</h4>
                                    <ul class="mb-0">
                                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                        {
                                            <li>@error.ErrorMessage</li>
                                        }
                                    </ul>
                                </div>
                            }

                            <div class="mb-10 text-center">
                                <h1 class="text-dark mb-3">Create an Account</h1>
                                <div class="text-gray-400 fw-bold fs-4">
                                    Already have an account?
                                    <a asp-action="SignIn" asp-controller="Account" class="link-primary fw-bolder">Sign in here</a>
                                </div>
                            </div>

                            <div class="row fv-row mb-7">
                                <div class="col-xl-6">
                                    <label class="form-label fw-bolder text-dark fs-6">First Name</label>
                                    <input asp-for="FirstName" class="form-control form-control-lg form-control-solid" required />
                                    <span asp-validation-for="FirstName" class="text-danger"></span>
                                </div>
                                <div class="col-xl-6">
                                    <label class="form-label fw-bolder text-dark fs-6">Last Name</label>
                                    <input asp-for="LastName" class="form-control form-control-lg form-control-solid" required />
                                    <span asp-validation-for="LastName" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="fv-row mb-7">
                                <label class="form-label fw-bolder text-dark fs-6">Email</label>
                                <input asp-for="Email" class="form-control form-control-lg form-control-solid" type="email" autocomplete="off" required data-kt-validation-email-message="The email address is not valid" />
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>

                            <div class="mb-10 fv-row position-relative">
                                <label class="form-label fw-bolder text-dark fs-6">Password</label>
                                <div class="input-group input-group-password">
                                    <input asp-for="Password" class="form-control form-control-lg form-control-solid"
                                           type="password" id="passwordInput" autocomplete="new-password" required
                                           /> @* REMOVED onkeyup="checkPasswordStrength();" *@
                                    <span class="btn btn-sm btn-icon position-absolute translate-middle-y top-50 end-0 me-3"
                                          onclick="togglePasswordVisibility('passwordInput', this)" style="cursor: pointer;">
                                        <i class="bi bi-eye-slash fs-2"></i>
                                    </span>
                                </div>
                                <span asp-validation-for="Password" class="text-danger d-block mt-2"></span>
                                <div id="password-strength-indicator"><div></div></div>
                                <div id="password-strength-text" class="form-text mt-1"></div>
                            </div>

                            <div class="fv-row mb-5 position-relative">
                                <label class="form-label fw-bolder text-dark fs-6">Confirm Password</label>
                                <div class="input-group input-group-password">
                                    <input asp-for="ConfirmPassword" class="form-control form-control-lg form-control-solid"
                                           type="password" id="confirmPasswordInput" autocomplete="new-password" required />
                                    <span class="btn btn-sm btn-icon position-absolute translate-middle-y top-50 end-0 me-3"
                                          onclick="togglePasswordVisibility('confirmPasswordInput', this)" style="cursor: pointer;">
                                        <i class="bi bi-eye-slash fs-2"></i>
                                    </span>
                                </div>
                                <span asp-validation-for="ConfirmPassword" class="text-danger d-block mt-2"></span>
                            </div>

                            <div class="fv-row mb-10">
                                <label class="form-check form-check-custom form-check-solid form-check-inline">
                                    <input asp-for="Toc" class="form-check-input" type="checkbox" required />
                                    <span class="form-check-label fw-bold text-gray-700 fs-6">
                                        I Agree the <a href="#" class="ms-1 link-primary fw-bolder">Terms and conditions</a>.
                                    </span>
                                </label>
                                <span asp-validation-for="Toc" class="text-danger d-block mt-2"></span>
                            </div>

                            <div class="text-center">
                                <button type="submit" id="kt_sign_up_submit" class="btn btn-lg btn-primary w-100 mb-5">
                                    <span class="indicator-label">Submit</span>
                                    <span class="indicator-progress">
                                        Please wait...
                                        <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                    </span>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="d-flex flex-center flex-wrap fs-6 p-5 pb-0">
                    <div class="d-flex flex-center fw-bold fs-6">
                        <a href="https://keenthemes.com" class="text-muted text-hover-primary px-2" target="_blank">About</a>
                        <a href="https://keenthemes.com/support" class="text-muted text-hover-primary px-2" target="_blank">Support</a>
                        <a href="https://1.envato.market/EA4JP" class="text-muted text-hover-primary px-2" target="_blank">Purchase</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="~/plugins/formvalidation/dist/js/FormValidation.min.js"></script>
    <script src="~/plugins/formvalidation/dist/js/plugins/Bootstrap5.min.js"></script>
    <script src="~/plugins/formvalidation/dist/js/plugins/Trigger.min.js"></script>
    <script src="~/plugins/global/plugins.bundle.js"></script>
    <script src="~/js/scripts.bundle.js"></script>
    <script src="~/js/custom/authentication/sign-up/general.js"></script>
    @Html.AntiForgeryToken()
    <partial name="_ValidationScriptsPartial" />
    @await Html.PartialAsync("_AlertMessages")
    
        <script>
            function togglePasswordVisibility(inputId, toggleElement) {
                const input = document.getElementById(inputId);
                const icon = toggleElement.querySelector('i');

                if (input.type === 'password') {
                    input.type = 'text';
                    icon.classList.remove('bi-eye-slash');
                    icon.classList.add('bi-eye');
                } else {
                    input.type = 'password';
                    icon.classList.remove('bi-eye');
                    icon.classList.add('bi-eye-slash');
                }
            }

            // Password Strength Check Function
                function checkPasswordStrength() {
                console.log('checkPasswordStrength called!'); // Confirm function is called

                const passwordInput = document.getElementById('passwordInput');
                const strengthIndicator = document.getElementById('password-strength-indicator').querySelector('div');
                const strengthText = document.getElementById('password-strength-text');

                console.log('passwordInput:', passwordInput); // Is this null?
                console.log('strengthIndicator (inner div):', strengthIndicator); // Is this null?
                console.log('strengthText:', strengthText); // Is this null?

                if (!passwordInput || !strengthIndicator || !strengthText) {
                    console.error("One or more required elements not found. Check IDs!");
                    return; // Stop execution if elements aren't found
                }

                const password = passwordInput.value;
                console.log('Password value:', password);

                let strength = 0;
                strength += /[a-z]/.test(password) ? 1 : 0;
                strength += /[A-Z]/.test(password) ? 1 : 0;
                strength += /[0-9]/.test(password) ? 1 : 0;
                strength += /[!#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]+/.test(password) ? 1 : 0;

                if (password.length >= 8) strength += 1;
                if (password.length >= 12) strength += 1;

                console.log('Calculated strength:', strength);

                // Reset classes on the strength bar (the inner div)
                strengthIndicator.className = ''; // Make sure to clear existing classes
                strengthIndicator.style.width = '0%'; // Reset width explicitly

                let text = '';
                let textColor = '';

                if (password.length === 0) {
                    text = '';
                    // No styling needed for empty password
                } else if (strength < 3) {
                    strengthIndicator.classList.add('strength-weak');
                    text = 'Weak';
                    textColor = '#f1416c';
                } else if (strength < 5) {
                    strengthIndicator.classList.add('strength-medium');
                    text = 'Medium';
                    textColor = '#ffc700';
                } else {
                    strengthIndicator.classList.add('strength-strong');
                    text = 'Strong';
                    textColor = '#50cd89';
                }
                console.log('Applied class to strengthIndicator:', strengthIndicator.className); // Check applied class
                console.log('Strength text:', text, 'color:', textColor);
                strengthText.textContent = text;
                strengthText.style.color = textColor;
            }

            document.addEventListener('DOMContentLoaded', function() {
                const passwordInput = document.getElementById('passwordInput');
                if (passwordInput) {
                    passwordInput.addEventListener('input', checkPasswordStrength);
                    checkPasswordStrength();
                } else {
                    console.warn('passwordInput element NOT found on DOMContentLoaded');
                }
            });
        </script>
    }
    </body>
</html>